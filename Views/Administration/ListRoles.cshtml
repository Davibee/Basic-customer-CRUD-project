@using Microsoft.AspNetCore.Identity;

@model IEnumerable<IdentityRole>

<h1> List of roles</h1>

@if (Model.Any())
{
    <a class="btn btn-primary" style="width:auto"
       asp-controller="Administration" asp-action="CreateRole">Create role</a>
    foreach (var role in Model)
    {

        <div class="card mb-3">
            <div class="card-header"> Role ID : @role.Id</div>
            <div class="card-body">
                <h5 class="card-title">Role Name: @role.Name</h5>
            </div>
            <div class="card-footer">
                <a href="/Administration/EditRole/@role.Id" class="btn btn-primary">Edit</a>
                <a href="/Administration/DeleteRole/@role.Id" class="btn btn-primary" method="post">Delete</a>
            </div>
        </div>
    }
}
else
{
    <div class="card" style="width:fit-content">
        <div class="card-header">
            No roles created yet
        </div>
        <div class="card-body">
            <h5 class="card-title">Use the button below to create a new role</h5>
            <a class="btn btn-primary" style="width:auto"
               asp-controller="Administration" asp-action="CreateRole">Create role</a>
        </div>
    </div>
}




@section scripts
{
    <script src="https://cdn.jsdelivr.net/npm/bootbox@5.5.2/dist/bootbox.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.js"></script>

    <script>
    $(document).ready(function () {
        var notificationMessage = "@TempData["NotificationMessage"]";
        if (notificationMessage) {
            Toastify({
                text: "Role updated successfully",
                duration: 3000, // Duration in milliseconds
                gravity: "top", // Position of the notification (top, bottom, left, right)
                backgroundColor: "green", // Background color
                stopOnFocus: true, // Close the notification when the user interacts with the page
            }).showToast();

        }
    });
    </script>
}
